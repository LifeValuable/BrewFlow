spring:
  cloud:
    gateway:
      server:
        webflux:  # ← Новый формат!
          routes:
            - id: user-service-route
              uri: http://user-service:8081
              predicates:
                - Path=/api/users/**,/api/auth/**
              filters:
                - StripPrefix=1

            - id: order-service-route
              uri: http://order-service:8082
              predicates:
                - Path=/api/orders/**,/api/cart/**,/api/products/**
              filters:
                - StripPrefix=1

            - id: payment-service-route
              uri: http://payment-service:8083
              predicates:
                - Path=/api/payments/**
              filters:
                - StripPrefix=1

            - id: notification-service-route
              uri: http://notification-service:8084
              predicates:
                - Path=/api/notifications/**
              filters:
                - StripPrefix=1
management:
  observations:
    http:
      server:
        requests:
          name: http.server.requests 
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://tempo:9411/api/v2/spans
